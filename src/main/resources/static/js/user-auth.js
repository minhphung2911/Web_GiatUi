document.addEventListener('DOMContentLoaded', function() {
    console.log('üîÑ User auth script loaded');
    ensureUsersExist();
    
    // Ki·ªÉm tra v√† g·∫Øn s·ª± ki·ªán cho form ƒëƒÉng nh·∫≠p
    const loginForm = document.getElementById('login-form');
    if (loginForm) {
        console.log('üìù Login form detected, attaching event listener');
        loginForm.addEventListener('submit', handleLogin);
    }
    
    // Ki·ªÉm tra v√† g·∫Øn s·ª± ki·ªán cho form ƒëƒÉng k√Ω
    const registerForm = document.getElementById('register-form');
    if (registerForm) {
        console.log('üìù Register form detected, attaching event listener');
        registerForm.addEventListener('submit', handleRegister);
    }
    
    // Ki·ªÉm tra v√† g·∫Øn s·ª± ki·ªán cho n√∫t ƒëƒÉng xu·∫•t
    const logoutBtn = document.getElementById('logout-btn');
    if (logoutBtn) {
        console.log('üìù Logout button detected, attaching event listener');
        logoutBtn.addEventListener('click', handleLogout);
    }
    
    // Hi·ªÉn th·ªã th√¥ng tin ng∆∞·ªùi d√πng n·∫øu ƒë√£ ƒëƒÉng nh·∫≠p
    updateUserUI();
    
    // Hi·ªÉn th·ªã tr·∫°ng th√°i ƒëƒÉng nh·∫≠p trong console
    const currentUser = getCurrentUser();
    if (currentUser) {
        console.log('‚úÖ ƒêƒÇNG NH·∫¨P TH√ÄNH C√îNG:', currentUser);
    } else {
        console.log('‚ùå CH∆ØA ƒêƒÇNG NH·∫¨P');
    }
});

// H√†m x·ª≠ l√Ω ƒëƒÉng nh·∫≠p
function handleLogin(event) {
    event.preventDefault();
    console.log('üîí Attempting login...');
    
    const email = document.getElementById('username').value;
    const password = document.getElementById('password').value;
    
    // Demo - Login with hardcoded credentials for testing
    if (email === 'admin@example.com' && password === 'password') {
        const demoUser = {
            id: 1,
            firstName: 'Admin',
            lastName: 'User',
            name: 'Admin User',
            email: 'admin@example.com',
            password: 'password',
            phoneNumber: '0123456789',
            address: '123 Demo Street',
            roles: ['ROLE_USER', 'ROLE_ADMIN']
        };
        
        console.log('‚úÖ DEMO LOGIN SUCCESS!', demoUser);
        localStorage.setItem('currentUser', JSON.stringify(demoUser));
        
        showToast('ƒêƒÉng nh·∫≠p th√†nh c√¥ng!', 'success');
        
        setTimeout(function() {
            window.location.href = '/';
        }, 1000);
        return;
    }
    
    // Th·ª±c t·∫ø - T√¨m ki·∫øm trong danh s√°ch users ƒë√£ ƒëƒÉng k√Ω
    const users = JSON.parse(localStorage.getItem('users') || '[]');
    const user = users.find(u => u.email === email && u.password === password);
    
    if (user) {
        console.log('‚úÖ LOGIN SUCCESS!', user);
        localStorage.setItem('currentUser', JSON.stringify(user));
        
        showToast('ƒêƒÉng nh·∫≠p th√†nh c√¥ng!', 'success');
        
        setTimeout(function() {
            window.location.href = '/';
        }, 1000);
    } else {
        console.log('‚ùå LOGIN FAILED: Invalid credentials');
        showToast('Email ho·∫∑c m·∫≠t kh·∫©u kh√¥ng ƒë√∫ng!', 'error');
    }
}

// H√†m x·ª≠ l√Ω ƒëƒÉng k√Ω
function handleRegister(event) {
    event.preventDefault();
    console.log('üîí Attempting registration...');
    
    const name = document.getElementById('name').value;
    const email = document.getElementById('email').value;
    const password = document.getElementById('password').value;
    const passwordConfirm = document.getElementById('passwordConfirm') ? document.getElementById('passwordConfirm').value : password;
    
    if (password !== passwordConfirm) {
        showToast('M·∫≠t kh·∫©u x√°c nh·∫≠n kh√¥ng kh·ªõp!', 'error');
        return;
    }
    
    const users = JSON.parse(localStorage.getItem('users') || '[]');
    
    // Ki·ªÉm tra email ƒë√£ t·ªìn t·∫°i ch∆∞a
    if (users.some(user => user.email === email)) {
        showToast('Email ƒë√£ ƒë∆∞·ª£c s·ª≠ d·ª•ng!', 'error');
        return;
    }
    
    // T·∫°o user m·ªõi
    const newUser = {
        id: users.length + 1,
        name: name,
        firstName: name.split(' ')[0],
        lastName: name.split(' ').slice(1).join(' '),
        email: email,
        password: password,
        roles: ['ROLE_USER']
    };
    
    // Th√™m user m·ªõi v√†o danh s√°ch
    users.push(newUser);
    localStorage.setItem('users', JSON.stringify(users));
    
    console.log('‚úÖ REGISTRATION SUCCESS!', newUser);
    
    // T·ª± ƒë·ªông ƒëƒÉng nh·∫≠p
    localStorage.setItem('currentUser', JSON.stringify(newUser));
    
    showToast('ƒêƒÉng k√Ω th√†nh c√¥ng!', 'success');
    
    setTimeout(function() {
        window.location.href = '/';
    }, 1000);
}

// H√†m x·ª≠ l√Ω ƒëƒÉng xu·∫•t
function handleLogout(event) {
    if (event) event.preventDefault();
    console.log('üîí Logging out...');
    
    localStorage.removeItem('currentUser');
    showToast('ƒêƒÉng xu·∫•t th√†nh c√¥ng!', 'success');
    
    setTimeout(function() {
        window.location.href = '/login?logout=true';
    }, 1000);
}

// H√†m hi·ªÉn th·ªã th√¥ng b√°o
function showToast(message, type = 'success') {
    console.log(`üîî TOAST: ${message} (${type})`);
    
    // Ki·ªÉm tra xem ƒë√£ c√≥ container cho toast ch∆∞a
    let toastContainer = document.querySelector('.toast-container');
    if (!toastContainer) {
        toastContainer = document.createElement('div');
        toastContainer.className = 'toast-container';
        toastContainer.style.position = 'fixed';
        toastContainer.style.top = '20px';
        toastContainer.style.right = '20px';
        toastContainer.style.zIndex = '9999';
        document.body.appendChild(toastContainer);
    }
    
    // T·∫°o toast
    const toast = document.createElement('div');
    toast.className = `toast ${type}`;
    toast.style.backgroundColor = type === 'success' ? '#4CAF50' : '#F44336';
    toast.style.color = '#ffffff';
    toast.style.padding = '15px';
    toast.style.marginBottom = '10px';
    toast.style.borderRadius = '4px';
    toast.style.boxShadow = '0 2px 5px rgba(0,0,0,0.2)';
    toast.style.minWidth = '250px';
    toast.style.opacity = '0';
    toast.style.transition = 'opacity 0.3s ease-in-out';
    
    // N·ªôi dung
    toast.innerHTML = `
        <div style="display: flex; justify-content: space-between; align-items: center;">
            <span>${message}</span>
            <button style="background: none; border: none; color: white; cursor: pointer; font-size: 16px;">&times;</button>
        </div>
    `;
    
    // Th√™m toast v√†o container
    toastContainer.appendChild(toast);
    
    // Hi·ªÉn th·ªã toast (sau m·ªôt ch√∫t ƒë·ªÉ animation ho·∫°t ƒë·ªông)
    setTimeout(() => {
        toast.style.opacity = '1';
    }, 10);
    
    // ƒê√≥ng toast khi nh·∫•p v√†o n√∫t ƒë√≥ng
    const closeBtn = toast.querySelector('button');
    closeBtn.addEventListener('click', function() {
        closeToast(toast);
    });
    
    // T·ª± ƒë·ªông ƒë√≥ng sau 3 gi√¢y
    setTimeout(function() {
        closeToast(toast);
    }, 3000);
    
    function closeToast(toast) {
        toast.style.opacity = '0';
        setTimeout(() => {
            if (toast.parentNode) {
                toast.parentNode.removeChild(toast);
            }
        }, 300);
    }
}

// H√†m ƒë·∫£m b·∫£o r·∫±ng c√≥ ng∆∞·ªùi d√πng trong localStorage
function ensureUsersExist() {
    // Ki·ªÉm tra n·∫øu users ƒë√£ t·ªìn t·∫°i
    const users = JSON.parse(localStorage.getItem('users') || '[]');
    
    // N·∫øu kh√¥ng c√≥ user n√†o, th√™m m·ªôt s·ªë user m·∫´u
    if (users.length === 0) {
        console.log('üìä No users found, creating demo users');
        const demoUsers = [
            {
                id: 1,
                firstName: 'Admin',
                lastName: 'User',
                name: 'Admin User',
                email: 'admin@example.com',
                password: 'password',
                phoneNumber: '0123456789',
                address: '123 Demo Street',
                roles: ['ROLE_USER', 'ROLE_ADMIN']
            },
            {
                id: 2,
                firstName: 'Test',
                lastName: 'User',
                name: 'Test User',
                email: 'user@example.com',
                password: 'password',
                phoneNumber: '0987654321',
                address: '456 Test Avenue',
                roles: ['ROLE_USER']
            }
        ];
        
        localStorage.setItem('users', JSON.stringify(demoUsers));
        console.log('‚úÖ Demo users created:', demoUsers);
    } else {
        console.log('üìä Found existing users:', users.length);
    }
}

// C·∫≠p nh·∫≠t UI d·ª±a tr√™n tr·∫°ng th√°i ƒëƒÉng nh·∫≠p
function updateUserUI() {
    const currentUser = JSON.parse(localStorage.getItem('currentUser') || 'null');
    
    // C√°c ph·∫ßn t·ª≠ c·∫ßn c·∫≠p nh·∫≠t
    const userNameElements = document.querySelectorAll('.user-name');
    const guestElements = document.querySelectorAll('.guest-only');
    const userElements = document.querySelectorAll('.user-only');
    
    if (currentUser) {
        // ƒê√£ ƒëƒÉng nh·∫≠p
        userNameElements.forEach(el => {
            el.textContent = currentUser.name || currentUser.email || 'Ng∆∞·ªùi d√πng';
        });
        
        // Hi·ªÉn th·ªã ph·∫ßn t·ª≠ d√†nh cho ng∆∞·ªùi ƒë√£ ƒëƒÉng nh·∫≠p
        userElements.forEach(el => {
            if (el) el.style.display = 'block';
        });
        guestElements.forEach(el => {
            if (el) el.style.display = 'none';
        });
        
        // Hi·ªÉn th·ªã user profile n·∫øu c√≥
        const userProfile = document.getElementById('user-profile');
        const authButtons = document.getElementById('auth-buttons');
        
        if (userProfile) {
            userProfile.classList.remove('hidden');
        }
        
        if (authButtons) {
            authButtons.classList.add('hidden');
        }
        
        // C·∫≠p nh·∫≠t th√¥ng tin ng∆∞·ªùi d√πng tr√™n c√°c form ƒë·∫∑t l·ªãch
        const userInfoName = document.getElementById('user-info-name');
        const userInfoEmail = document.getElementById('user-info-email');
        const userInfoPhone = document.getElementById('user-info-phone');
        const userInfoAddress = document.getElementById('user-info-address');
        
        if (userInfoName) userInfoName.textContent = currentUser.name || 'Ch∆∞a c·∫≠p nh·∫≠t';
        if (userInfoEmail) userInfoEmail.textContent = currentUser.email || 'Ch∆∞a c·∫≠p nh·∫≠t';
        if (userInfoPhone) userInfoPhone.textContent = currentUser.phoneNumber || 'Ch∆∞a c·∫≠p nh·∫≠t';
        if (userInfoAddress) userInfoAddress.textContent = currentUser.address || 'Ch∆∞a c·∫≠p nh·∫≠t';
        
        // ·∫®n th√¥ng b√°o y√™u c·∫ßu ƒëƒÉng nh·∫≠p
        const loginRequired = document.getElementById('login-required');
        if (loginRequired) loginRequired.style.display = 'none';
        
        // Hi·ªÉn th·ªã form ƒë·∫∑t l·ªãch c·ªßa user n·∫øu c√≥
        const userBookingForm = document.getElementById('user-booking-form');
        if (userBookingForm) userBookingForm.classList.remove('hidden');
    } else {
        // Ch∆∞a ƒëƒÉng nh·∫≠p
        userNameElements.forEach(el => {
            if (el) el.textContent = 'Kh√°ch';
        });
        
        userElements.forEach(el => {
            if (el) el.style.display = 'none';
        });
        
        guestElements.forEach(el => {
            if (el) el.style.display = 'block';
        });
        
        // Hi·ªÉn th·ªã n√∫t ƒëƒÉng nh·∫≠p/ƒëƒÉng k√Ω n·∫øu c√≥
        const userProfile = document.getElementById('user-profile');
        const authButtons = document.getElementById('auth-buttons');
        
        if (userProfile) {
            userProfile.classList.add('hidden');
        }
        
        if (authButtons) {
            authButtons.classList.remove('hidden');
        }
        
        // B·∫•t k·ª≥ ai c≈©ng c√≥ th·ªÉ s·ª≠ d·ª•ng ch·ª©c nƒÉng ƒë·∫∑t l·ªãch th√†nh vi√™n
        // ·∫®n th√¥ng b√°o y√™u c·∫ßu ƒëƒÉng nh·∫≠p ·ªü trang ƒë·∫∑t l·ªãch
        const loginRequired = document.getElementById('login-required');
        if (loginRequired) loginRequired.style.display = 'none';
        
        // Hi·ªÉn th·ªã form ƒë·∫∑t l·ªãch c·ªßa user n·∫øu c√≥, ngay c·∫£ khi kh√¥ng ƒëƒÉng nh·∫≠p
        const userBookingForm = document.getElementById('user-booking-form');
        if (userBookingForm) userBookingForm.classList.remove('hidden');
        
        // C·∫≠p nh·∫≠t th√¥ng tin m·∫∑c ƒë·ªãnh cho kh√°ch v√£ng lai
        const userInfoName = document.getElementById('user-info-name');
        const userInfoEmail = document.getElementById('user-info-email');
        const userInfoPhone = document.getElementById('user-info-phone');
        const userInfoAddress = document.getElementById('user-info-address');
        
        if (userInfoName) userInfoName.textContent = 'Kh√°ch v√£ng lai';
        if (userInfoEmail) userInfoEmail.textContent = 'guest@example.com';
        if (userInfoPhone) userInfoPhone.textContent = '(C·∫≠p nh·∫≠t khi ƒë·∫∑t l·ªãch)';
        if (userInfoAddress) userInfoAddress.textContent = '(C·∫≠p nh·∫≠t khi ƒë·∫∑t l·ªãch)';
    }
}

// L·∫•y user hi·ªán t·∫°i
function getCurrentUser() {
    return JSON.parse(localStorage.getItem('currentUser') || 'null');
} 